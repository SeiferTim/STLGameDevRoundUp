name: ðŸ“§ RoundUp Newsletter Email
run-name: ðŸ“§ RoundUp Newsletter Email by @${{ github.actor }}

on:
    workflow_call:
      inputs:
        issue_no:
          required: true
          type: string
        base_url:
          required: true
          type: string

permissions: write-all

defaults:
    run:
        shell: bash

jobs:
  mailchimp:
    runs-on: ubuntu-latest
    steps:
      - name: Create, Update, and Send Mailchimp Campaign
        run: |
          set -euo pipefail
          # Create campaign
          campaign_id=$(curl -fsSL -X POST \
            "https://${{ secrets.MAILCHIMP_DC }}.api.mailchimp.com/3.0/campaigns" \
            --user "admin@stlgame.dev:${{ secrets.MAILCHIMP_API_KEY }}" \
            --data-raw '{
              "type": "regular",
              "recipients": {"list_id": "c120d5d29b"},
              "settings": {
                "subject_line": "St Louis Game Developer RoundUp Issue â„– ${{ inputs.issue_no }}",
                "preview_text": "Monthly Game Development News from STLGameDev!",
                "title": "RoundUp â„– ${{ inputs.issue_no }}",
                "from_name": "STLGameDev",
                "reply_to": "news@stlgame.dev",
                "use_conversation": false,
                "to_name": "*|FNAME|*",
                "auto_footer": true,
                "inline_css": true
              },
              "content_type": "template"
            }' | jq -r '.id')
          if [ -z "$campaign_id" ]; then
            echo "Error: Failed to create Mailchimp campaign!" >&2
            exit 1
          fi
          echo "Created campaign: $campaign_id" >&2

          # Fetch HTML content
          url="${{ inputs.base_url }}/issue-${{ inputs.issue_no }}/email.html"
          html_file="issue_email.html"
          curl -fsSL "$url" -o "$html_file"
          if [ $? -ne 0 ] || [ ! -s "$html_file" ]; then
            echo "Error: Failed to fetch HTML or file is empty!" >&2
            exit 1
          fi
          # Log first 100 characters for debug
          head -c 100 "$html_file" >&2

          # Sanitize: remove newlines and carriage returns
          sanitized_html=$(tr -d '\n\r' < "$html_file")
          # Encode as JSON
          echo "{\"html\":\"$sanitized_html\"}" > email.json
          if ! jq empty email.json; then
            echo "Error: Invalid JSON generated!" >&2
            exit 1
          fi

          # Update campaign content
          curl --location --request PUT "https://${{ secrets.MAILCHIMP_DC }}.api.mailchimp.com/3.0/campaigns/$campaign_id/content" \
            --header 'Content-Type: application/json' \
            --user "admin@stlgame.dev:${{ secrets.MAILCHIMP_API_KEY }}" \
            --data @email.json
          if [ $? -ne 0 ]; then
            echo "Error: Failed to update campaign content!" >&2
            exit 1
          fi
          echo "Updated campaign content." >&2

          # Send test email
          curl -X POST \
            "https://${{ secrets.MAILCHIMP_DC }}.api.mailchimp.com/3.0/campaigns/$campaign_id/actions/send" \
            --user "admin@stlgame.dev:${{ secrets.MAILCHIMP_API_KEY }}"
          if [ $? -ne 0 ]; then
            echo "Error: Failed to send test email!" >&2
            exit 1
          fi
          echo "Test email sent." >&2